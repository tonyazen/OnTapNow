//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OnTapNow.Services.BeerService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllBeersRequest", Namespace="http://schemas.datacontract.org/2004/07/BeerWithSoapService.Models.ServiceModels")]
    [System.SerializableAttribute()]
    public partial class GetAllBeersRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OnTapNow.Services.BeerService.BaseRequest BaseRequestField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OnTapNow.Services.BeerService.BaseRequest BaseRequest {
            get {
                return this.BaseRequestField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseRequestField, value) != true)) {
                    this.BaseRequestField = value;
                    this.RaisePropertyChanged("BaseRequest");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseRequest", Namespace="http://schemas.datacontract.org/2004/07/BeerWithSoapService.Models.ServiceModels")]
    [System.SerializableAttribute()]
    public partial class BaseRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string APIKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APIKey {
            get {
                return this.APIKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.APIKeyField, value) != true)) {
                    this.APIKeyField = value;
                    this.RaisePropertyChanged("APIKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientCode {
            get {
                return this.ClientCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientCodeField, value) != true)) {
                    this.ClientCodeField = value;
                    this.RaisePropertyChanged("ClientCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestIdField, value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllBeersResponse", Namespace="http://schemas.datacontract.org/2004/07/BeerWithSoapService.Models.ServiceModels")]
    [System.SerializableAttribute()]
    public partial class GetAllBeersResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OnTapNow.Services.BeerService.BaseResponse BaseResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OnTapNow.Services.BeerService.Beer[] BeersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OnTapNow.Services.BeerService.BaseResponse BaseResponse {
            get {
                return this.BaseResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseResponseField, value) != true)) {
                    this.BaseResponseField = value;
                    this.RaisePropertyChanged("BaseResponse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OnTapNow.Services.BeerService.Beer[] Beers {
            get {
                return this.BeersField;
            }
            set {
                if ((object.ReferenceEquals(this.BeersField, value) != true)) {
                    this.BeersField = value;
                    this.RaisePropertyChanged("Beers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseResponse", Namespace="http://schemas.datacontract.org/2004/07/BeerWithSoapService.Models.ServiceModels")]
    [System.SerializableAttribute()]
    public partial class BaseResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RequestTimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OnTapNow.Services.BeerService.ResponseStatus ResponseStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechnicalErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayErrorMessage {
            get {
                return this.DisplayErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayErrorMessageField, value) != true)) {
                    this.DisplayErrorMessageField = value;
                    this.RaisePropertyChanged("DisplayErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestIdField, value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RequestTimeStamp {
            get {
                return this.RequestTimeStampField;
            }
            set {
                if ((this.RequestTimeStampField.Equals(value) != true)) {
                    this.RequestTimeStampField = value;
                    this.RaisePropertyChanged("RequestTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OnTapNow.Services.BeerService.ResponseStatus ResponseStatus {
            get {
                return this.ResponseStatusField;
            }
            set {
                if ((this.ResponseStatusField.Equals(value) != true)) {
                    this.ResponseStatusField = value;
                    this.RaisePropertyChanged("ResponseStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TechnicalErrorMessage {
            get {
                return this.TechnicalErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.TechnicalErrorMessageField, value) != true)) {
                    this.TechnicalErrorMessageField = value;
                    this.RaisePropertyChanged("TechnicalErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Beer", Namespace="http://schemas.datacontract.org/2004/07/BeerWithSoapService")]
    [System.SerializableAttribute()]
    public partial class Beer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BreweryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OnTapNow.Services.BeerService.Style StyleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abv {
            get {
                return this.AbvField;
            }
            set {
                if ((object.ReferenceEquals(this.AbvField, value) != true)) {
                    this.AbvField = value;
                    this.RaisePropertyChanged("Abv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brewery {
            get {
                return this.BreweryField;
            }
            set {
                if ((object.ReferenceEquals(this.BreweryField, value) != true)) {
                    this.BreweryField = value;
                    this.RaisePropertyChanged("Brewery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OnTapNow.Services.BeerService.Style Style {
            get {
                return this.StyleField;
            }
            set {
                if ((this.StyleField.Equals(value) != true)) {
                    this.StyleField = value;
                    this.RaisePropertyChanged("Style");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseStatus", Namespace="http://schemas.datacontract.org/2004/07/BeerWithSoapService.Models.ServiceModels")]
    public enum ResponseStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failure = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Style", Namespace="http://schemas.datacontract.org/2004/07/BeerWithSoapService")]
    public enum Style : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ale = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lager = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stout = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IPA = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaleAle = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pilsner = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wheat = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BrownAle = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bitter = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Boch = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BarleyWine = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Porter = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Saison = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lambic = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kolsch = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dunkel = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreamAle = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tripel = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dubbel = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gose = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AmericanPaleAle = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScotchAle = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rye = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 23,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetBeerRequest", Namespace="http://schemas.datacontract.org/2004/07/BeerWithSoapService.Models.ServiceModels")]
    [System.SerializableAttribute()]
    public partial class GetBeerRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OnTapNow.Services.BeerService.BaseRequest BaseRequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OnTapNow.Services.BeerService.BaseRequest BaseRequest {
            get {
                return this.BaseRequestField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseRequestField, value) != true)) {
                    this.BaseRequestField = value;
                    this.RaisePropertyChanged("BaseRequest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetBeerResponse", Namespace="http://schemas.datacontract.org/2004/07/BeerWithSoapService.Models.ServiceModels")]
    [System.SerializableAttribute()]
    public partial class GetBeerResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OnTapNow.Services.BeerService.BaseResponse BaseResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OnTapNow.Services.BeerService.Beer BeerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OnTapNow.Services.BeerService.BaseResponse BaseResponse {
            get {
                return this.BaseResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseResponseField, value) != true)) {
                    this.BaseResponseField = value;
                    this.RaisePropertyChanged("BaseResponse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OnTapNow.Services.BeerService.Beer Beer {
            get {
                return this.BeerField;
            }
            set {
                if ((object.ReferenceEquals(this.BeerField, value) != true)) {
                    this.BeerField = value;
                    this.RaisePropertyChanged("Beer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddBeerRequest", Namespace="http://schemas.datacontract.org/2004/07/BeerWithSoapService.Models.ServiceModels")]
    [System.SerializableAttribute()]
    public partial class AddBeerRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OnTapNow.Services.BeerService.BaseRequest BaseRequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OnTapNow.Services.BeerService.AddBeer BeerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OnTapNow.Services.BeerService.BaseRequest BaseRequest {
            get {
                return this.BaseRequestField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseRequestField, value) != true)) {
                    this.BaseRequestField = value;
                    this.RaisePropertyChanged("BaseRequest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OnTapNow.Services.BeerService.AddBeer Beer {
            get {
                return this.BeerField;
            }
            set {
                if ((object.ReferenceEquals(this.BeerField, value) != true)) {
                    this.BeerField = value;
                    this.RaisePropertyChanged("Beer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddBeer", Namespace="http://schemas.datacontract.org/2004/07/BeerWithSoapService")]
    [System.SerializableAttribute()]
    public partial class AddBeer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BreweryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OnTapNow.Services.BeerService.Style StyleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abv {
            get {
                return this.AbvField;
            }
            set {
                if ((object.ReferenceEquals(this.AbvField, value) != true)) {
                    this.AbvField = value;
                    this.RaisePropertyChanged("Abv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brewery {
            get {
                return this.BreweryField;
            }
            set {
                if ((object.ReferenceEquals(this.BreweryField, value) != true)) {
                    this.BreweryField = value;
                    this.RaisePropertyChanged("Brewery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OnTapNow.Services.BeerService.Style Style {
            get {
                return this.StyleField;
            }
            set {
                if ((this.StyleField.Equals(value) != true)) {
                    this.StyleField = value;
                    this.RaisePropertyChanged("Style");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddBeerResponse", Namespace="http://schemas.datacontract.org/2004/07/BeerWithSoapService.Models.ServiceModels")]
    [System.SerializableAttribute()]
    public partial class AddBeerResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OnTapNow.Services.BeerService.BaseResponse BaseResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OnTapNow.Services.BeerService.Beer BeerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OnTapNow.Services.BeerService.BaseResponse BaseResponse {
            get {
                return this.BaseResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseResponseField, value) != true)) {
                    this.BaseResponseField = value;
                    this.RaisePropertyChanged("BaseResponse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OnTapNow.Services.BeerService.Beer Beer {
            get {
                return this.BeerField;
            }
            set {
                if ((object.ReferenceEquals(this.BeerField, value) != true)) {
                    this.BeerField = value;
                    this.RaisePropertyChanged("Beer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateBeerRequest", Namespace="http://schemas.datacontract.org/2004/07/BeerWithSoapService.Models.ServiceModels")]
    [System.SerializableAttribute()]
    public partial class UpdateBeerRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OnTapNow.Services.BeerService.BaseRequest BaseRequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OnTapNow.Services.BeerService.Beer BeerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OnTapNow.Services.BeerService.BaseRequest BaseRequest {
            get {
                return this.BaseRequestField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseRequestField, value) != true)) {
                    this.BaseRequestField = value;
                    this.RaisePropertyChanged("BaseRequest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OnTapNow.Services.BeerService.Beer Beer {
            get {
                return this.BeerField;
            }
            set {
                if ((object.ReferenceEquals(this.BeerField, value) != true)) {
                    this.BeerField = value;
                    this.RaisePropertyChanged("Beer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateBeerResponse", Namespace="http://schemas.datacontract.org/2004/07/BeerWithSoapService.Models.ServiceModels")]
    [System.SerializableAttribute()]
    public partial class UpdateBeerResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OnTapNow.Services.BeerService.BaseResponse BaseResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OnTapNow.Services.BeerService.Beer BeerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OnTapNow.Services.BeerService.BaseResponse BaseResponse {
            get {
                return this.BaseResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseResponseField, value) != true)) {
                    this.BaseResponseField = value;
                    this.RaisePropertyChanged("BaseResponse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OnTapNow.Services.BeerService.Beer Beer {
            get {
                return this.BeerField;
            }
            set {
                if ((object.ReferenceEquals(this.BeerField, value) != true)) {
                    this.BeerField = value;
                    this.RaisePropertyChanged("Beer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteBeerRequest", Namespace="http://schemas.datacontract.org/2004/07/BeerWithSoapService.Models.ServiceModels")]
    [System.SerializableAttribute()]
    public partial class DeleteBeerRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OnTapNow.Services.BeerService.BaseRequest BaseRequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OnTapNow.Services.BeerService.BaseRequest BaseRequest {
            get {
                return this.BaseRequestField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseRequestField, value) != true)) {
                    this.BaseRequestField = value;
                    this.RaisePropertyChanged("BaseRequest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteBeerResponse", Namespace="http://schemas.datacontract.org/2004/07/BeerWithSoapService.Models.ServiceModels")]
    [System.SerializableAttribute()]
    public partial class DeleteBeerResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OnTapNow.Services.BeerService.BaseResponse BaseResponseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OnTapNow.Services.BeerService.BaseResponse BaseResponse {
            get {
                return this.BaseResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseResponseField, value) != true)) {
                    this.BaseResponseField = value;
                    this.RaisePropertyChanged("BaseResponse");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BeerService.IBeerWithSoapService")]
    public interface IBeerWithSoapService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBeerWithSoapService/GetAllBeers", ReplyAction="http://tempuri.org/IBeerWithSoapService/GetAllBeersResponse")]
        OnTapNow.Services.BeerService.GetAllBeersResponse GetAllBeers(OnTapNow.Services.BeerService.GetAllBeersRequest getAllBeersRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBeerWithSoapService/GetAllBeers", ReplyAction="http://tempuri.org/IBeerWithSoapService/GetAllBeersResponse")]
        System.Threading.Tasks.Task<OnTapNow.Services.BeerService.GetAllBeersResponse> GetAllBeersAsync(OnTapNow.Services.BeerService.GetAllBeersRequest getAllBeersRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBeerWithSoapService/GetBeer", ReplyAction="http://tempuri.org/IBeerWithSoapService/GetBeerResponse")]
        OnTapNow.Services.BeerService.GetBeerResponse GetBeer(OnTapNow.Services.BeerService.GetBeerRequest getBeerRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBeerWithSoapService/GetBeer", ReplyAction="http://tempuri.org/IBeerWithSoapService/GetBeerResponse")]
        System.Threading.Tasks.Task<OnTapNow.Services.BeerService.GetBeerResponse> GetBeerAsync(OnTapNow.Services.BeerService.GetBeerRequest getBeerRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBeerWithSoapService/AddBeer", ReplyAction="http://tempuri.org/IBeerWithSoapService/AddBeerResponse")]
        OnTapNow.Services.BeerService.AddBeerResponse AddBeer(OnTapNow.Services.BeerService.AddBeerRequest beerRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBeerWithSoapService/AddBeer", ReplyAction="http://tempuri.org/IBeerWithSoapService/AddBeerResponse")]
        System.Threading.Tasks.Task<OnTapNow.Services.BeerService.AddBeerResponse> AddBeerAsync(OnTapNow.Services.BeerService.AddBeerRequest beerRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBeerWithSoapService/UpdateBeer", ReplyAction="http://tempuri.org/IBeerWithSoapService/UpdateBeerResponse")]
        OnTapNow.Services.BeerService.UpdateBeerResponse UpdateBeer(OnTapNow.Services.BeerService.UpdateBeerRequest updateBeerRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBeerWithSoapService/UpdateBeer", ReplyAction="http://tempuri.org/IBeerWithSoapService/UpdateBeerResponse")]
        System.Threading.Tasks.Task<OnTapNow.Services.BeerService.UpdateBeerResponse> UpdateBeerAsync(OnTapNow.Services.BeerService.UpdateBeerRequest updateBeerRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBeerWithSoapService/DeleteBeer", ReplyAction="http://tempuri.org/IBeerWithSoapService/DeleteBeerResponse")]
        OnTapNow.Services.BeerService.DeleteBeerResponse DeleteBeer(OnTapNow.Services.BeerService.DeleteBeerRequest deleteBeerRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBeerWithSoapService/DeleteBeer", ReplyAction="http://tempuri.org/IBeerWithSoapService/DeleteBeerResponse")]
        System.Threading.Tasks.Task<OnTapNow.Services.BeerService.DeleteBeerResponse> DeleteBeerAsync(OnTapNow.Services.BeerService.DeleteBeerRequest deleteBeerRequest);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBeerWithSoapServiceChannel : OnTapNow.Services.BeerService.IBeerWithSoapService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BeerWithSoapServiceClient : System.ServiceModel.ClientBase<OnTapNow.Services.BeerService.IBeerWithSoapService>, OnTapNow.Services.BeerService.IBeerWithSoapService {
        
        public BeerWithSoapServiceClient() {
        }
        
        public BeerWithSoapServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BeerWithSoapServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BeerWithSoapServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BeerWithSoapServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public OnTapNow.Services.BeerService.GetAllBeersResponse GetAllBeers(OnTapNow.Services.BeerService.GetAllBeersRequest getAllBeersRequest) {
            return base.Channel.GetAllBeers(getAllBeersRequest);
        }
        
        public System.Threading.Tasks.Task<OnTapNow.Services.BeerService.GetAllBeersResponse> GetAllBeersAsync(OnTapNow.Services.BeerService.GetAllBeersRequest getAllBeersRequest) {
            return base.Channel.GetAllBeersAsync(getAllBeersRequest);
        }
        
        public OnTapNow.Services.BeerService.GetBeerResponse GetBeer(OnTapNow.Services.BeerService.GetBeerRequest getBeerRequest) {
            return base.Channel.GetBeer(getBeerRequest);
        }
        
        public System.Threading.Tasks.Task<OnTapNow.Services.BeerService.GetBeerResponse> GetBeerAsync(OnTapNow.Services.BeerService.GetBeerRequest getBeerRequest) {
            return base.Channel.GetBeerAsync(getBeerRequest);
        }
        
        public OnTapNow.Services.BeerService.AddBeerResponse AddBeer(OnTapNow.Services.BeerService.AddBeerRequest beerRequest) {
            return base.Channel.AddBeer(beerRequest);
        }
        
        public System.Threading.Tasks.Task<OnTapNow.Services.BeerService.AddBeerResponse> AddBeerAsync(OnTapNow.Services.BeerService.AddBeerRequest beerRequest) {
            return base.Channel.AddBeerAsync(beerRequest);
        }
        
        public OnTapNow.Services.BeerService.UpdateBeerResponse UpdateBeer(OnTapNow.Services.BeerService.UpdateBeerRequest updateBeerRequest) {
            return base.Channel.UpdateBeer(updateBeerRequest);
        }
        
        public System.Threading.Tasks.Task<OnTapNow.Services.BeerService.UpdateBeerResponse> UpdateBeerAsync(OnTapNow.Services.BeerService.UpdateBeerRequest updateBeerRequest) {
            return base.Channel.UpdateBeerAsync(updateBeerRequest);
        }
        
        public OnTapNow.Services.BeerService.DeleteBeerResponse DeleteBeer(OnTapNow.Services.BeerService.DeleteBeerRequest deleteBeerRequest) {
            return base.Channel.DeleteBeer(deleteBeerRequest);
        }
        
        public System.Threading.Tasks.Task<OnTapNow.Services.BeerService.DeleteBeerResponse> DeleteBeerAsync(OnTapNow.Services.BeerService.DeleteBeerRequest deleteBeerRequest) {
            return base.Channel.DeleteBeerAsync(deleteBeerRequest);
        }
    }
}
